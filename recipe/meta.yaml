{% set name = "cffi" %}
{% set version = "2.0.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529
  patches:
    - patches/0001-Link-to-dl-library.patch  # [win]
    - patches/apple-jit.patch  # [osx]
    - patches/setup-linux.patch  # [linux]

build:
  number: 0
  skip: true # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
  host:
    - pip
    - python
    - setuptools >=66.1
    - wheel
    - libffi {{ libffi }} # [not win]
  run:
    - python
    - pycparser
    # bounds set through run_exports:
    - libffi # [not win] 

test:
  imports:
    - cffi
    - _cffi_backend
  requires:
    - pip
  commands:
    - pip check
    - python -X faulthandler -c "from cffi import FFI; print(FFI().dlopen('ucrtbase'))"  # [win]
    - python -X faulthandler -c "from cffi import FFI; print(FFI().dlopen(None))"  # [not win]

about:
  home: https://cffi.readthedocs.io
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Foreign Function Interface for Python calling C code.
  description: |
    Cffi aims to allow users to call C code from Python without having to
    learn a 3rd language. It provides a convenient and reliable way to call
    compiled C code from Python using interface declarations written in C.
  doc_url: https://cffi.readthedocs.io
  dev_url: https://github.com/python-cffi/cffi

extra:
  recipe-maintainers:
    - goanpeca
    - inducer
    - ocefpaf
    - mingwandroid
